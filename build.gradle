plugins {
  id 'application'

//  id 'com.github.sherter.google-java-format' version '0.3.2'
}

mainClassName = 'au.com.southsky.minutes.Main'

wrapper {
  gradleVersion = '7.4.2'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation group: 'com.beust', name: 'jcommander', version: '1.78'
  implementation group: 'org.kohsuke', name: 'github-api', version: '1.116'
  implementation group: 'com.itextpdf', name: 'itext7-core', version: '7.1.9'
  implementation group: 'com.itextpdf', name: 'html2pdf', version: '2.1.6'

  implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.15.2'

  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'

//  testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
//  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}
/*
tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed"
    }
}
*/
test {
  useJUnitPlatform()
  testLogging.showStandardStreams=true
}


/*
// If Java formatter checks fail, tell the user how to fix them.
task printFormatHelperMessage {
  doLast {
    throw new GradleException('google-java-format is required.\n' +
        'Use ./gradlew googleJavaFormat to reformat the broken files')
  }
}
verifyGoogleJavaFormat.finalizedBy printFormatHelperMessage
printFormatHelperMessage.onlyIf { verifyGoogleJavaFormat.state.failure != null }
*/
